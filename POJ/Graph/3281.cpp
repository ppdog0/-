// 如果只是分配一种，用二分图最大匹配就能够解决
// 结合 s -> 食物->牛 二分图 和 牛->饮料 二分图 -> t

// 输入
int N, F, D; // 牛/食物/饮料
bool likeF[MAX_N][MAX_F]; // 食物的喜好
bool likeD[MAX_N][MAX_D]; // 饮料的喜好

void solve() {
    // 0~N-1: 食物一侧的牛
    // N~2N-1: 饮料一侧的牛
    // 2N~2N+F-1: 食物
    // 2N+F~2N+F+D-1: 饮料
}